{"version":3,"file":"static/js/162.08e492b7.chunk.js","mappings":"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","sources":["redux/selectors.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.contacts;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\"};","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts, getIsLoading } from 'redux/selectors';\nimport { TailSpin } from 'react-loader-spinner';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const isLoaded = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n  const notify = () => {\n    toast.info('Contact added', {\n      position: 'top-right',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    });\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const newContact = { name: form.name.value, number: form.number.value };\n    let filteredContacts = contacts.filter(contact => {\n      return contact.name.toLowerCase() === form.name.value.toLowerCase();\n    });\n    if (filteredContacts.length === 0) {\n      dispatch(addContact(newContact));\n      form.reset();\n      setName('');\n      setNumber('');\n    } else {\n      alert(`${form.name.value} is already in contact list`);\n    }\n  };\n\n  return (\n    <form className={css.form} onSubmit={submitHandler}>\n      <label>\n        Name\n        <input\n          value={name}\n          onChange={e => setName(e.target.value)}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          autoComplete=\"false\"\n        />\n      </label>\n\n      <label>\n        Number\n        <input\n          value={number}\n          onChange={e => setNumber(e.target.value)}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          autoComplete=\"false\"\n        />\n      </label>\n\n      <button\n        type=\"submit\"\n        style={{ display: 'flex', alignItems: 'center' }}\n        onClick={notify}\n        disabled={!Boolean(name) || !Boolean(number)}\n      >\n        {isLoaded ? (\n          <TailSpin\n            height=\"20\"\n            width=\"20\"\n            color=\"#fff\"\n            ariaLabel=\"tail-spin-loading\"\n            radius=\"1\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        ) : (\n          'Add contact'\n        )}\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__+pnW-\"};","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const filterHandler = e => {\n    const filterValue = e.currentTarget.value;\n    dispatch(setFilter(filterValue));\n  };\n\n  return (\n    <label className={css.filterLabel}>\n      Find contacts by name\n      <input type=\"text\" onChange={filterHandler} />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactListItem\":\"ContactListItem_ContactListItem__sSK4a\"};","import React, { memo } from 'react';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getIsLoading } from 'redux/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport css from './ContactListItem.module.css';\nimport { TailSpin } from 'react-loader-spinner';\n\nconst ContactListItem = memo(({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const onDelete = e => {\n    dispatch(deleteContact(e.currentTarget.id));\n    toast.info('Contact deleted', {\n      position: 'top-right',\n      autoClose: 2000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'light',\n    });\n  };\n\n  return (\n    <li className={css.ContactListItem} key={id}>\n      <span>\n        {name}: {number}\n      </span>\n      <button id={id} onClick={onDelete}>\n        {isLoading ? (\n          <TailSpin\n            height=\"20\"\n            width=\"20\"\n            color=\"#fff\"\n            ariaLabel=\"tail-spin-loading\"\n            radius=\"1\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n          />\n        ) : (\n          'Delete'\n        )}\n      </button>\n    </li>\n  );\n});\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ContactList\":\"ContactList_ContactList__2mXfy\",\"noContactsText\":\"ContactList_noContactsText__oNRub\"};","import ContactListItem from 'components/ContactListItem/ContactListItem';\nimport Loader from 'components/Loader/Loader';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter, getIsLoading } from 'redux/selectors';\nimport css from './ContactList.module.css';\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getIsLoading);\n  const filterValue = useSelector(getFilter);\n  const visibleContacts = getVisibeContacts(contacts, filterValue);\n\n  function getVisibeContacts(contacts, filterValue) {\n    return contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue.toLowerCase())\n    );\n  }\n  if (!contacts?.length) {\n    return <p className={css.noContactsText}>You can add contacts</p>;\n  }\n\n  if (!visibleContacts?.length) {\n    return <p>Not found </p>;\n  }\n\n  const elements = visibleContacts.map(contact => {\n    return (\n      <ContactListItem\n        key={contact.id}\n        id={contact.id}\n        name={contact.name}\n        number={contact.number}\n      />\n    );\n  });\n  return (\n    <>\n      {isLoading ? <Loader /> : <ul className={css.ContactList}>{elements}</ul>}\n    </>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\n\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport Filter from '../components/Filter/Filter';\nimport ContactList from '../components/ContactList/ContactList';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <main>\n      <div>\n        <section>\n          <h2>Add new contact</h2>\n          <ContactForm />\n        </section>\n        <section>\n          <h2>Contacts</h2>\n          <Filter />\n          <ContactList />\n        </section>\n      </div>\n    </main>\n  );\n};\n\nexport default Contacts;\n"],"names":["getContacts","state","contacts","getIsLoading","isLoading","getFilter","filter","useState","name","setName","number","setNumber","useSelector","isLoaded","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","form","currentTarget","newContact","value","contact","toLowerCase","length","addContact","reset","alert","onChange","target","type","pattern","title","required","autoComplete","style","display","alignItems","onClick","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","disabled","Boolean","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","filterValue","setFilter","memo","id","deleteContact","visibleContacts","includes","getVisibeContacts","elements","map","Loader","useEffect","fetchContacts"],"sourceRoot":""}